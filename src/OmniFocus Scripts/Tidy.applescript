use AppleScript version "2.4"
use scripting additions

use hobson : script "com.kraigparkinson/Hobson"
use hoblib : script "com.kraigparkinson/Default OmniFocus Rules Library"
use cfwof : script "com.kraigparkinson/Creating Flow with OmniFocus Rules"

property parent : hobson

property suite : hobson's makeRuleSuite("Creating Flow with OmniFocus")

script ConvertGoogleCalendarTokens
	property parent : hobson's makeRuleBase()
	property name : "Strip source tokens for Google Calendar"
	
	set aToken to "|GC|" & space
	
	match by (taskName()'s startsWith(aToken)'s getContents())
	
	command thru (hobson's CommandFactory's makeStripTokenFromTaskNameCommand(aToken))
	command thru (do()'s changeNote()'s prepend("INFO: This task was automatically generated by Google Calendar via Zapier." & linefeed & linefeed)'s getContents())
end script

script ConvertGoogleDriveTokens
	property parent : hobson's makeRuleBase()
	property name : "Strip source tokens for Google Drive"
	
	set aToken to "|GD|" & space
	
	match by (taskName()'s startsWith(aToken)'s getContents())
	
	command thru (hobson's CommandFactory's makeStripTokenFromTaskNameCommand(aToken))
	command thru (do()'s changeNote()'s prepend("INFO: This task was automatically generated by Google Drive via Zapier." & linefeed & linefeed)'s getContents())
end script

script ConvertGmailTokens
	property parent : hobson's makeRuleBase()
	property name : "Strip source tokens for Gmail"
	
	set aToken to "|GM|" & space
	
	match by (taskName()'s startsWith(aToken)'s getContents())
	
	command thru (hobson's CommandFactory's makeStripTokenFromTaskNameCommand(aToken))
	command thru (do()'s changeNote()'s prepend("INFO: This task was automatically generated by GMail via Zapier." & linefeed & linefeed)'s getContents())
end script

script StripAdjustTaskToken
	property parent : hobson's makeRuleBase()
	property name : "Strip (Adjust task - ?) tokens"
	
	set aToken to "|GM|" & space
	
	match by (taskName()'s match()'s¬
 		customText(setTextAttr("abridged name")'s anyText())'s ¬
		customText(setTextAttr("adjustment")'s l("[(]Adjust task - ")'s anyText()'s l("[)]"))'s ¬
		customText(setTextAttr("name remainder")'s anyText())'s getContents())
	
--	command thru (do()'s taskname()'s rename(getTextAttr("abridged name") & getTextAttr("name remainder"))
	command thru (do()'s taskname()'s remove(getTextAttr("adjustment"))'s getContents())
	command thru (do()'s changeNote()'s prepend("INFO: This task was automatically generated by GMail via Zapier." & linefeed & linefeed)'s getContents())
end script

script TidySet
	property parent : RuleSet(me)
	property name : "Selected Tasks"
	property target : hobson's UserSpecifiedTasks

	evaluate by hoblib's OmniFocusTransportTextParsingRule
	evaluate by ConvertGoogleCalendarTokens
	evaluate by ConvertGoogleDriveTokens
	evaluate by ConvertGMailTokens
	evaluate by StripAdjustTaskToken
	evaluate by cfwof's TidyConsiderationsRule
	evaluate by cfwof's AddDailyRepeatRule
	evaluate by hoblib's ExpiredMeetingPreparationRule
	evaluate by hoblib's ExpiredCheckMeetingParticipationRule	
end script		

on run	
	tell suite to exec()	
	display notification "Finished tidying selected task(s)." with title "OmniFocus" subtitle "Tidy" sound name "Sosumi"

end run
